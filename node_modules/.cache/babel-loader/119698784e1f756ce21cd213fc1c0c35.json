{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Monu\\\\Downloads\\\\FoodOrder\\\\FoodOder\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  item: [],\n  totalAmonut: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updateTotalAmonut = state.totalAmonut + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.item.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.item[existingCartItemIndex];\n    let updateItem;\n\n    if (existingCartItem) {\n      const updateItems = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updateItem = [...state.item];\n      updateItem[existingCartItemIndex] = updateItems;\n    } else {\n      updateItem = state.item.concat(action.item);\n    }\n\n    return {\n      item: updateItem,\n      totalAmonut: updateTotalAmonut\n    };\n  }\n\n  if (action.type === 'REMOVE') {\n    const existingCartItemIndex = state.item.findIndex(item => item.id === action.id);\n    const existingItem = state.item[existingCartItemIndex];\n    const updateTotalAmonut = state.totalAmonut - existingItem.price;\n    let updateItem;\n\n    if (existingItem.amount === 1) {\n      updateItem = state.item.filter(item => item.id !== action.id);\n    } else {\n      const updateItems = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updateItem = [...state.item];\n      updateItem[existingCartItemIndex] = updateItems;\n    }\n\n    return {\n      item: updateItem,\n      totalAmonut: updateTotalAmonut\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartState] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartState({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemToCartHandler = id => {\n    dispatchCartState({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    item: cartState.item,\n    totalAmount: cartState.totalAmonut,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemToCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"A321fGrGOvATAKC1pl29YNNungo=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/Monu/Downloads/FoodOrder/FoodOder/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","item","totalAmonut","cartReducer","state","action","type","updateTotalAmonut","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updateItem","updateItems","concat","existingItem","filter","CartProvider","props","cartState","dispatchCartState","addItemToCartHandler","removeItemToCartHandler","cartContext","totalAmount","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAGA,MAAMC,gBAAgB,GAAC;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,WAAW,EAAC;AAFO,CAAvB;;AAKA,MAAMC,WAAW,GAAC,CAACC,KAAD,EAAOC,MAAP,KAAgB;AAC9B,MAAGA,MAAM,CAACC,IAAP,KAAc,KAAjB,EAAuB;AACnB,UAAMC,iBAAiB,GAAGH,KAAK,CAACF,WAAN,GAAqBG,MAAM,CAACJ,IAAP,CAAYO,KAAZ,GAAoBH,MAAM,CAACJ,IAAP,CAAYQ,MAA/E;AAEA,UAAMC,qBAAqB,GAAGN,KAAK,CAACH,IAAN,CAAWU,SAAX,CACzBV,IAAD,IAAQA,IAAI,CAACW,EAAL,KAAYP,MAAM,CAACJ,IAAP,CAAYW,EADN,CAA9B;AAGA,UAAMC,gBAAgB,GAAGT,KAAK,CAACH,IAAN,CAAWS,qBAAX,CAAzB;AAEA,QAAII,UAAJ;;AAEA,QAAGD,gBAAH,EAAoB;AAChB,YAAME,WAAW,GAAC,EACd,GAAGF,gBADW;AAEdJ,QAAAA,MAAM,EAACI,gBAAgB,CAACJ,MAAjB,GAA0BJ,MAAM,CAACJ,IAAP,CAAYQ;AAF/B,OAAlB;AAIAK,MAAAA,UAAU,GAAG,CAAC,GAAGV,KAAK,CAACH,IAAV,CAAb;AACAa,MAAAA,UAAU,CAACJ,qBAAD,CAAV,GAAoCK,WAApC;AACH,KAPD,MAOK;AACDD,MAAAA,UAAU,GAAGV,KAAK,CAACH,IAAN,CAAWe,MAAX,CAAkBX,MAAM,CAACJ,IAAzB,CAAb;AACH;;AAGD,WAAM;AACFA,MAAAA,IAAI,EAAEa,UADJ;AAEFZ,MAAAA,WAAW,EAACK;AAFV,KAAN;AAIH;;AAED,MAAGF,MAAM,CAACC,IAAP,KAAe,QAAlB,EAA2B;AAGvB,UAAMI,qBAAqB,GAAGN,KAAK,CAACH,IAAN,CAAWU,SAAX,CACzBV,IAAD,IAAQA,IAAI,CAACW,EAAL,KAAYP,MAAM,CAACO,EADD,CAA9B;AAIA,UAAMK,YAAY,GAAGb,KAAK,CAACH,IAAN,CAAWS,qBAAX,CAArB;AACA,UAAMH,iBAAiB,GAAGH,KAAK,CAACF,WAAN,GAAoBe,YAAY,CAACT,KAA3D;AACA,QAAIM,UAAJ;;AACA,QAAGG,YAAY,CAACR,MAAb,KAAwB,CAA3B,EAA6B;AACzBK,MAAAA,UAAU,GAAGV,KAAK,CAACH,IAAN,CAAWiB,MAAX,CAAmBjB,IAAD,IAASA,IAAI,CAACW,EAAL,KAAYP,MAAM,CAACO,EAA9C,CAAb;AACH,KAFD,MAEK;AACD,YAAMG,WAAW,GAAG,EAAC,GAAGE,YAAJ;AAAiBR,QAAAA,MAAM,EAAIQ,YAAY,CAACR,MAAb,GAAsB;AAAjD,OAApB;AACAK,MAAAA,UAAU,GAAG,CAAC,GAAGV,KAAK,CAACH,IAAV,CAAb;AACAa,MAAAA,UAAU,CAACJ,qBAAD,CAAV,GAAoCK,WAApC;AACH;;AAED,WAAM;AACFd,MAAAA,IAAI,EAACa,UADH;AAEFZ,MAAAA,WAAW,EAAEK;AAFX,KAAN;AAIH;;AACD,SAAOP,gBAAP;AACH,CArDD;;AAuDA,MAAMmB,YAAY,GAAEC,KAAK,IAAG;AAAA;;AAExB,QAAM,CAACC,SAAD,EAAYC,iBAAZ,IAA+BxB,UAAU,CAACK,WAAD,EAAaH,gBAAb,CAA/C;;AAEA,QAAMuB,oBAAoB,GAACtB,IAAI,IAAE;AAC7BqB,IAAAA,iBAAiB,CAAC;AAAChB,MAAAA,IAAI,EAAC,KAAN;AAAaL,MAAAA,IAAI,EAACA;AAAlB,KAAD,CAAjB;AACH,GAFD;;AAGA,QAAMuB,uBAAuB,GAACZ,EAAE,IAAE;AAC9BU,IAAAA,iBAAiB,CAAC;AAAChB,MAAAA,IAAI,EAAC,QAAN;AAAeM,MAAAA,EAAE,EAACA;AAAlB,KAAD,CAAjB;AACH,GAFD;;AAGA,QAAMa,WAAW,GAAG;AAChBxB,IAAAA,IAAI,EAACoB,SAAS,CAACpB,IADC;AAEhByB,IAAAA,WAAW,EAACL,SAAS,CAACnB,WAFN;AAGhByB,IAAAA,OAAO,EAACJ,oBAHQ;AAIhBK,IAAAA,UAAU,EAACJ;AAJK,GAApB;AAMA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACKL,KAAK,CAACS;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CArBD;;GAAMV,Y;;KAAAA,Y;AAuBN,eAAeA,YAAf","sourcesContent":["import { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\n\r\nconst defaultCartState={\r\n    item: [],\r\n    totalAmonut:0\r\n};\r\n\r\nconst cartReducer=(state,action)=>{\r\n    if(action.type==='ADD'){\r\n        const updateTotalAmonut = state.totalAmonut + (action.item.price * action.item.amount);\r\n        \r\n        const existingCartItemIndex = state.item.findIndex(\r\n            (item)=>item.id === action.item.id\r\n        );\r\n        const existingCartItem = state.item[existingCartItemIndex];\r\n\r\n        let updateItem;\r\n\r\n        if(existingCartItem){\r\n            const updateItems={\r\n                ...existingCartItem,\r\n                amount:existingCartItem.amount + action.item.amount\r\n            };\r\n            updateItem = [...state.item];\r\n            updateItem[existingCartItemIndex] = updateItems;\r\n        }else{\r\n            updateItem = state.item.concat(action.item);\r\n        }\r\n\r\n\r\n        return{\r\n            item: updateItem,\r\n            totalAmonut:updateTotalAmonut\r\n        };\r\n    } \r\n\r\n    if(action.type ==='REMOVE'){\r\n\r\n        \r\n        const existingCartItemIndex = state.item.findIndex(\r\n            (item)=>item.id === action.id\r\n        );\r\n\r\n        const existingItem = state.item[existingCartItemIndex];\r\n        const updateTotalAmonut = state.totalAmonut - existingItem.price;\r\n        let updateItem;\r\n        if(existingItem.amount === 1){\r\n            updateItem = state.item.filter((item)=> item.id !== action.id);\r\n        }else{\r\n            const updateItems = {...existingItem,amount : (existingItem.amount - 1)};\r\n            updateItem = [...state.item];\r\n            updateItem[existingCartItemIndex] = updateItems;\r\n        }\r\n\r\n        return{\r\n            item:updateItem,\r\n            totalAmonut: updateTotalAmonut\r\n        };\r\n    }\r\n    return defaultCartState;\r\n};\r\n\r\nconst CartProvider= props =>{\r\n\r\n    const [cartState, dispatchCartState]=useReducer(cartReducer,defaultCartState);\r\n\r\n    const addItemToCartHandler=item=>{\r\n        dispatchCartState({type:'ADD', item:item});\r\n    };\r\n    const removeItemToCartHandler=id=>{\r\n        dispatchCartState({type:'REMOVE',id:id});\r\n    };\r\n    const cartContext = {\r\n        item:cartState.item,\r\n        totalAmount:cartState.totalAmonut,\r\n        addItem:addItemToCartHandler,\r\n        removeItem:removeItemToCartHandler,\r\n    };\r\n    return(\r\n        <CartContext.Provider value={cartContext}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    );\r\n};\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}