{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Monu\\\\Downloads\\\\FoodOrder\\\\FoodOder\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  item: [],\n  totalAmonut: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updateItem = state.item.concat();\n    const updateTotalAmonut = state.totalAmonut + action.item.price * action.item.amonut;\n    return {\n      item: updateItem,\n      totalAmonut: updateTotalAmonut\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartState] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartState({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemToCartHandler = id => {\n    dispatchCartState({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    item: cartState.item,\n    totalAmonut: cartState.totalAmonut,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemToCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"A321fGrGOvATAKC1pl29YNNungo=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/Monu/Downloads/FoodOrder/FoodOder/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","item","totalAmonut","cartReducer","state","action","type","updateItem","concat","updateTotalAmonut","price","amonut","CartProvider","props","cartState","dispatchCartState","addItemToCartHandler","removeItemToCartHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAGA,MAAMC,gBAAgB,GAAC;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,WAAW,EAAC;AAFO,CAAvB;;AAKA,MAAMC,WAAW,GAAC,CAACC,KAAD,EAAOC,MAAP,KAAgB;AAC9B,MAAGA,MAAM,CAACC,IAAP,KAAc,KAAjB,EAAuB;AACnB,UAAMC,UAAU,GAAGH,KAAK,CAACH,IAAN,CAAWO,MAAX,EAAnB;AACA,UAAMC,iBAAiB,GAAGL,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACJ,IAAP,CAAYS,KAAZ,GAAmBL,MAAM,CAACJ,IAAP,CAAYU,MAA7E;AACA,WAAM;AACFV,MAAAA,IAAI,EAAEM,UADJ;AAEFL,MAAAA,WAAW,EAACO;AAFV,KAAN;AAIH;;AACD,SAAOT,gBAAP;AACH,CAVD;;AAYA,MAAMY,YAAY,GAAEC,KAAK,IAAG;AAAA;;AAExB,QAAM,CAACC,SAAD,EAAYC,iBAAZ,IAA+BjB,UAAU,CAACK,WAAD,EAAaH,gBAAb,CAA/C;;AAEA,QAAMgB,oBAAoB,GAACf,IAAI,IAAE;AAC7Bc,IAAAA,iBAAiB,CAAC;AAACT,MAAAA,IAAI,EAAC,KAAN;AAAaL,MAAAA,IAAI,EAACA;AAAlB,KAAD,CAAjB;AACH,GAFD;;AAGA,QAAMgB,uBAAuB,GAACC,EAAE,IAAE;AAC9BH,IAAAA,iBAAiB,CAAC;AAACT,MAAAA,IAAI,EAAC,QAAN;AAAeY,MAAAA,EAAE,EAACA;AAAlB,KAAD,CAAjB;AACH,GAFD;;AAGA,QAAMC,WAAW,GAAG;AAChBlB,IAAAA,IAAI,EAACa,SAAS,CAACb,IADC;AAEhBC,IAAAA,WAAW,EAACY,SAAS,CAACZ,WAFN;AAGhBkB,IAAAA,OAAO,EAACJ,oBAHQ;AAIhBK,IAAAA,UAAU,EAACJ;AAJK,GAApB;AAMA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACKN,KAAK,CAACS;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CArBD;;GAAMV,Y;;KAAAA,Y;AAuBN,eAAeA,YAAf","sourcesContent":["import { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\n\r\nconst defaultCartState={\r\n    item: [],\r\n    totalAmonut:0\r\n}\r\n\r\nconst cartReducer=(state,action)=>{\r\n    if(action.type==='ADD'){\r\n        const updateItem = state.item.concat();\r\n        const updateTotalAmonut = state.totalAmonut + action.item.price* action.item.amonut;\r\n        return{\r\n            item: updateItem,\r\n            totalAmonut:updateTotalAmonut\r\n        };\r\n    } \r\n    return defaultCartState;\r\n};\r\n\r\nconst CartProvider= props =>{\r\n\r\n    const [cartState, dispatchCartState]=useReducer(cartReducer,defaultCartState);\r\n\r\n    const addItemToCartHandler=item=>{\r\n        dispatchCartState({type:'ADD', item:item});\r\n    };\r\n    const removeItemToCartHandler=id=>{\r\n        dispatchCartState({type:'REMOVE',id:id})\r\n    };\r\n    const cartContext = {\r\n        item:cartState.item,\r\n        totalAmonut:cartState.totalAmonut,\r\n        addItem:addItemToCartHandler,\r\n        removeItem:removeItemToCartHandler\r\n    };\r\n    return(\r\n        <CartContext.Provider value={cartContext}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    );\r\n};\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}